---

    - name: Get List of ned filenames
      shell: "ls files | grep ncs-*"
      become: false
      delegate_to: localhost
      register: ned_list_raw
    
    - name: View List of NEDs from Files directory
      debug: var=ned_list_raw

    - name: Create List of ned names
      set_fact:
        ned_list: "{{ ned_list_raw.stdout_lines }}"

    - name: Copy NED Installers
      become_user: "{{ user }}"
      copy: src={{ item }} dest=/home/{{ user }} owner={{ user }} group={{ user }}
      loop: "{{ ned_list }}"

    - name: Create nso install Directory
      become_user: "{{ user }}"
      file: path=/home/{{ user }}/nso-install state=directory owner={{ user }} group={{ user }}

    - name: Copy nso Installer
      become_user: "{{ user }}"
      copy: src=./files/nso-{{ nso_version }}.linux.x86_64.signed.bin dest=/home/{{ user }} owner={{ user }} group={{ user }}

    - name: Extract Installer Bin from Signed Bin
      command: "sh /home/{{ user }}/nso-{{ nso_version }}.linux.x86_64.signed.bin"
      become_user: "{{ user }}"
      ignore_errors: yes
 
    - name: Extract NED Tar from Signed Bin
      command: "sh /home/{{ user }}/{{ item }}"
      become_user: "{{ user }}"
      ignore_errors: yes
      loop: "{{ ned_list }}"

    - name: Get List of ned tar filenames
      shell: "rm *.tar.gz.signature"

    - name: Get List of ned tar filenames
      shell: "ls /home/{{ user }} | grep -e .*tar.gz"
      register: ned_list_tar_raw

    - name: Set Fact List of ned names
      set_fact:
        ned_list_tar: "{{ ned_list_tar_raw.stdout_lines }}"

    - name: Extract NEDs from tar.gz
      command: "tar xf /home/{{ user }}/{{ item }}"
      become_user: "{{ user }}"
      ignore_errors: yes
      register: nso_install
      loop: "{{ ned_list_tar }}"
      
    - name: INSTALL NSO 
      command: "sh /home/{{ user }}/nso-{{ nso_version }}.linux.x86_64.installer.bin /home/{{ user }}/nso-install"
      become_user: "{{ user }}"
      ignore_errors: yes
      register: nso_install

    - name: DEBUG nso INSTALL
      debug:
       var: nso_install

    - name: Remove nso Installer
      become_user: "{{ user }}"
      file: 
        path: /home/{{ user }}/nso-{{ nso_version }}.linux.x86_64.installer.bin
        state: absent 

    - name: Create nso run Directory
      become_user: "{{ user }}"
      file: path=/home/{{ user }}/nso-run state=directory owner={{ user }} group={{ user }}
